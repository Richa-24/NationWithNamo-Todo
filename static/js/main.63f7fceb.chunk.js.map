{"version":3,"sources":["Redux/actionType.js","Components/Navbar.jsx","Redux/action.js","Components/TodoData.jsx","Components/CompletedTask.jsx","Pages/MainPage.jsx","App.js","Redux/localStorage.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["ADD_TODO","COMPLETED_TASK","SEARCH_HASH","TOGGLE_TASK","CLEAR_ALL","useStyles","makeStyles","theme","title","flexGrow","textAlign","fontSize","fontFamily","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","dispatch","useDispatch","handleHashtag","e","hash","target","value","slice","type","payload","AppBar","Toolbar","Typography","className","variant","noWrap","InputBase","placeholder","root","input","onChange","TodoData","useSelector","state","todo","hashSearch","handleCheckbox","id","checked","status","map","item","style","Checkbox","marginTop","textShadow","CompletedTask","completedTodo","margin","button","MainPage","useState","task","setTask","handleSubmit","preventDefault","uuid","Container","Button","onClick","onSubmit","noValidate","autoComplete","TextField","label","handleChange","float","App","loadData","key","data","localStorage","getItem","JSON","parse","err","saveData","setItem","stringify","removeData","removeItem","initState","createComposer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reverse","filter","includes","filterTask","findItem","find","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63f7fceb.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\"\r\nexport const COMPLETED_TASK = \"COMPLETED_TASK\"\r\nexport const SEARCH_HASH = \"SEARCH_HASH\"\r\nexport const TOGGLE_TASK = \"TOGGLE_TASK\"\r\nexport const CLEAR_ALL = \"CLEAR_ALL\"\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { searchHash } from '../Redux/action'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: 'center',\r\n        fontSize: '35px',\r\n        fontFamily: 'Helvetica Neue',\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        }\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n\r\n    const handleHashtag = (e) => {\r\n        let hash = e.target.value.slice(1)\r\n        dispatch(searchHash(hash))\r\n    }\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Todo List\r\n          </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Searchâ€¦\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            onChange={(e) => handleHashtag(e)}\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div >\r\n    );\r\n}","import { ADD_TODO, TOGGLE_TASK, CLEAR_ALL, COMPLETED_TASK, SEARCH_HASH } from './actionType'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport const addTodo = (payload) => ({\r\n    type: ADD_TODO,\r\n    payload: {\r\n        id: uuid(),\r\n        title: payload,\r\n        status: false\r\n    }\r\n})\r\n\r\nexport const completedTask = (payload) => ({\r\n    type: COMPLETED_TASK,\r\n    payload: {\r\n        id: payload.id,\r\n        title: payload.title,\r\n        status: true\r\n    }\r\n})\r\nexport const searchHash = (payload) => ({\r\n    type: SEARCH_HASH,\r\n    payload\r\n})\r\n\r\nexport const toggleTask = (payload) => ({\r\n    type: TOGGLE_TASK,\r\n    payload\r\n})\r\n\r\nexport const clearAll = (payload) => ({\r\n    type: CLEAR_ALL,\r\n    payload\r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Checkbox } from '@material-ui/core'\r\nimport { completedTask } from '../Redux/action'\r\n\r\nexport default function TodoData() {\r\n    const { todo, hashSearch } = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleCheckbox = (e, id, title) => {\r\n        if (e.target.checked === true) {\r\n            dispatch(completedTask({ id, title }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Pendings</h1>\r\n\r\n            {hashSearch ? hashSearch.map((item) => {\r\n                return (\r\n                    <div key={item.id} style={{ display: 'flex' }}>\r\n                        <div> <Checkbox\r\n                            color=\"primary\" onChange={(e) => handleCheckbox(e, item.id, item.title)} /></div>\r\n                        <div style={{ marginTop: '6px', fontSize: '25px', textShadow: '2px 2px 4px #000000' }}>{item.title}</div>\r\n                    </div>\r\n                )\r\n            }) :\r\n\r\n                todo && todo.map((item) => {\r\n                    return (\r\n                        <div key={item.id} style={{ display: 'flex' }}>\r\n                            <div> <Checkbox\r\n                                color=\"primary\" onChange={(e) => handleCheckbox(e, item.id, item.title)} /></div>\r\n                            <div style={{ marginTop: '6px', fontSize: '25px' }}>{item.title}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function CompletedTask() {\r\n    const { completedTodo } = useSelector((state) => state)\r\n\r\n    return (\r\n        <>\r\n            <h1>Completed Tasks</h1>\r\n            {completedTodo && completedTodo.map((item) => {\r\n                return (\r\n                    <div key={item.id}>\r\n                        <div style={{ margin: '10px', fontSize: '25px', textAlign: 'center' }}>{item.title}</div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Navbar from '../Components/Navbar'\r\nimport TodoData from '../Components/TodoData'\r\nimport CompletedTask from '../Components/CompletedTask'\r\nimport { Button, Container, TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux'\r\nimport { addTodo, clearAll } from '../Redux/action'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        margin: '20px'\r\n    },\r\n}));\r\n\r\nexport default function MainPage() {\r\n    const classes = useStyles()\r\n    const [task, setTask] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        setTask(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (task !== \"\") {\r\n            dispatch(addTodo(task))\r\n        }\r\n        setTask(\"\")\r\n    }\r\n\r\n    const handleClear = () => {\r\n        dispatch(clearAll())\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Container>\r\n                <div className={classes.button}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleClear}>\r\n                        Clear All\r\n            </Button>\r\n                </div>\r\n                <form onSubmit={(e) => handleSubmit(e)} noValidate autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                    <TextField id=\"standard-basic\" label=\"Add Todo\" value={task} onChange={(e) => handleChange(e)} />\r\n                </form>\r\n                <div>\r\n                    <div style={{ float: 'left' }}><TodoData /></div>\r\n                    <div style={{ float: 'right' }}><CompletedTask /></div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import React from 'react'\nimport MainPage from './Pages/MainPage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage></MainPage>\n    </div>\n  );\n}\n\nexport default App;\n","export function loadData(key) {\r\n    try {\r\n        const data = localStorage.getItem(key);\r\n        return JSON.parse(data);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport function saveData(key, data) {\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n}\r\n\r\nexport function removeData(key) {\r\n    localStorage.removeItem(key);\r\n}\r\n","import { ADD_TODO, TOGGLE_TASK, CLEAR_ALL, COMPLETED_TASK, SEARCH_HASH } from './actionType'\r\nimport { saveData, loadData, removeData } from \"./localStorage\";\r\n\r\n\r\nexport const initState = {\r\n    todo: loadData(\"todoTasks\") || [],\r\n    completedTodo: loadData(\"completedTasks\") || [],\r\n    hashSearch: \"\"\r\n}\r\n\r\nexport const reducer = (state = initState, { type, payload }) => {\r\n    switch (type) {\r\n        case ADD_TODO:\r\n            saveData(\"todoTasks\", [...state.todo, payload])\r\n            return {\r\n                ...state,\r\n                todo: [...state.todo, payload].reverse()\r\n            }\r\n\r\n        case SEARCH_HASH:\r\n            state.hashSearch = state.todo.filter((item) => item.title.includes(payload))\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case COMPLETED_TASK:\r\n            let filterTask = state.todo.filter(item => item.id !== payload.id)\r\n            saveData(\"completedTasks\", [...state.completedTodo, payload])\r\n            saveData(\"todoTasks\", filterTask)\r\n\r\n            return {\r\n                ...state,\r\n                todo: state.todo.filter(item => item.id !== payload.id),\r\n                completedTodo: [...state.completedTodo, payload].reverse()\r\n            }\r\n\r\n        case TOGGLE_TASK:\r\n            let findItem = state.todo.find((item) => item.id === payload)\r\n            findItem.status = !findItem.status\r\n            return {\r\n                ...state,\r\n                todo: state.todo.filter(item => item.id === payload ? findItem : item),\r\n            }\r\n\r\n        case CLEAR_ALL:\r\n            removeData(\"todoTasks\");\r\n            removeData(\"completedTasks\");\r\n            return {\r\n                ...state,\r\n                todo: [],\r\n                completedTodo: []\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst createComposer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    createComposer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from '../src/Redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}